import matplotlib.pyplot as plt
import numpy as np

b2 = [0.128, 0.1253, 0.1265, 0.125, 0.124, 0.1225, 0.125, 0.118, 0.116, 0.1145, 0.115, 0.1135, 0.112, 0.11, 0.1115,
      0.1113, 0.1118, 0.11, 0.109]
t2 = [11, 13.5, 14, 15.5, 16.5, 16.8, 17.8, 18.3, 19, 19.7, 21, 22.5, 22.8, 24, 25, 26.3, 28.5, 29, 30]

b2_ = np.polyval(np.polyfit(t2, b2, 1), t2)
k02, b02 = np.polyfit(t2, b2, 1)
# print(k02, b02)


b3 = [0.1308, 0.129, 0.1274, 0.126, 0.1261, 0.1259, 0.126, 0.1255, 0.1247, 0.1236, 0.1228, 0.123, 0.122, 0.1204, 0.1208,
      0.1217, 0.12, 0.116, 0.114, 0.11]
t3 = [10.5, 11.8, 13, 13.8, 14.7, 15.4, 16.3, 18, 18.7, 19, 20.3, 21, 22, 23.2, 24, 24.8, 25.7, 26.5, 27, 30]
b3_ = np.polyval(np.polyfit(t3, b3, 1), t3)
k03, b03 = np.polyfit(t3, b3, 1)
# print(k03, b03)

b4 = [.13, .129, .1274, .1262, .1268, .126, .125, .124, .1228, .121, .118, .116, .1152, .115, .1141, .112, .1103, .1115,
      .1122, .1104, .1107, .108]
t4 = [10.8, 12, 13.2, 14, 15, 15.8, 16, 16.6, 17, 18, 18.8, 19.5, 20, 21.2, 21.8, 23, 23.8, 24.7, 25.3, 26.8, 27.4, 29]
b4_ = np.polyval(np.polyfit(t4, b4, 1), t4)
k04, b04 = np.polyfit(t4, b4, 1)
# print(k04, b04)

b5 = [.13, .128, .1258, .126, .1252, .1247, .1234, .123, .122, .1219, .121, .119, .1184, .1192, .1181, .1147, .1123,
      .11, .1086, .108]
t5 = [9, 10.3, 11, 12.1, 13, 14.7, 15.3, 16, 17.3, 18, 19.3, 21, 21.3, 22.4, 22.8, 24, 24.6, 25, 25.5, 27]
b5_ = np.polyval(np.polyfit(t5, b5, 1), t5)
k05, b05 = np.polyfit(t5, b5, 1)
# print(k05, b05)

b6 = [.1282, .128, .1263, .124, .1242, .1238, .1237, .1223, .1208, .12, .118, .1172, .116, .117, .114, .11, .108, .1064,
      .1076]
t6 = [11.7, 12.8, 13.7, 14.8, 15.7, 16.5, 18, 19.5, 21, 22, 23.3, 24, 24.8, 25.7, 27, 27.8, 28.2, 28.9, 30]
b6_ = np.polyval(np.polyfit(t6, b6, 1), t6)
k06, b06 = np.polyfit(t6, b6, 1)
# print(k06, b06)

b7 = [.127, .126, .1248, .1232, .1233, .1226, .1217, .1202, .119, .1183, .117, .1154, .114, .1144, .1137, .111, .105,
      .1026]
t7 = [12.5, 13.4, 15, 15.7, 16.7, 17.6, 19.3, 20.8, 22.1, 22.6, 24, 25, 25.6, 27, 28.3, 28.6, 29.4, 30]
b7_ = np.polyval(np.polyfit(t7, b7, 1), t7)
k07, b07 = np.polyfit(t7, b7, 1)
# print(k07, b07)

# plt.plot(t7, b7)
# plt.plot(t7, b7_, color='red')
# plt.show()


b0_p6 = [.2032, .3972, .5699, .7971, .0856, .1686, .2421, .3542]
Mt = [8.43 / 100, 1.73 / 10, 2.31 / 10, 3.21 / 10, 3.79 / 100, 7.79 / 100, 1.04 / 10, 1.44 / 10]
b0_1 = np.polyval(np.polyfit(Mt, b0_p6, 1), Mt)
b, a = np.polyfit(Mt, b0_p6, 1)
# print(a, b)
plt.plot(Mt, b0_1)
plt.scatter(Mt, b0_p6, s=np.array([1.2]) * len(b0_p6), color='black')
plt.grid()
plt.xlabel('момент силы натяжения нити Mt, Н*м')
plt.ylabel('начальное угловое ускорение b0, рад/c^2')
M0 = -a / b
# print(M0 * 100)
# print(1 / b)
I = 1 / b
plt.savefig('1.png')
# plt.show()

n = len(b0_p6)
b1 = sum(i ** 2 for i in b0_p6) / n ** 2
b2 = sum(i for i in b0_p6) ** 2 / n
m1 = sum(i ** 2 for i in Mt) / n ** 2
m2 = sum(i for i in Mt) ** 2 / n

g_b = 1 / n ** 0.5 * abs((b1 - b2) / (m1 - m2) - b ** 2) ** 0.5
e_b = g_b / b
g_I = I * e_b
# print(g_I)

I = [0.309, 0.157, 0.095, 0.077]
R = [0.0463, 0.0291, 0.0214, 0.0187]
I_1 = np.polyval(np.polyfit(R, I, 1), R)
b_1, a_1 = np.polyfit(R, I, 1)
plt.plot(R, I_1)
plt.scatter(R, I, s=np.array([1.2]) * len(I), color='black')
plt.grid()
plt.xlabel('расстояние до оси шкива ^2 R^2, м^2')
plt.ylabel('момент инерции системы I, кг*м^2')
plt.savefig('2.png')
# plt.show()
# print(b_1, a_1)
i1 = sum(I[i] ** 2 for i in range(len(I))) / 4
i2 = sum(I) ** 2 / 16
r1 = sum(R[i] ** 2 for i in range(len(I))) / 4
r2 = sum(R) ** 2 / 16
g = (i1 - i2 - b_1 *(r1 - r2)) ** 0.5 / 2
print(g)